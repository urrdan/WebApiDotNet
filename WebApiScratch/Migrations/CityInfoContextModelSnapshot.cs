// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApiScratch.Contexts;

namespace WebApiScratch.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApiScratch.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Detail")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("CityTable");

                    b.HasData(
                        new { Id = 1, Detail = "Busy City especially during rush hours.", Name = "Nairobi" },
                        new { Id = 2, Detail = "Has a big park within the city center", Name = "New York" }
                    );
                });

            modelBuilder.Entity("WebApiScratch.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId");

                    b.Property<string>("Comment")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsTable");

                    b.HasData(
                        new { Id = 1, CityId = 1, Comment = "Very enjoyable place", Name = "Maasai Mara" },
                        new { Id = 2, CityId = 1, Comment = "A bit too serious", Name = "Bomas of Kenya" },
                        new { Id = 3, CityId = 2, Comment = "Ohh! Politicos!", Name = "Nation Assembly" },
                        new { Id = 4, CityId = 2, Comment = "Dinosaures leave here.", Name = "Oama park" }
                    );
                });

            modelBuilder.Entity("WebApiScratch.Entities.PointOfInterest", b =>
                {
                    b.HasOne("WebApiScratch.Entities.City", "City")
                        .WithMany("PointOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
